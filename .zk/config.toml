# zk configuration file
#
# Uncomment the properties you want to customize.

# NOTE SETTINGS
#
# Defines the default options used when generating new notes.
[note]

# Language used when writing notes.
# This is used to generate slugs or with date formats.
language = "ja"

# The default title used for new note, if no `--title` flag is provided.
default-title = "Untitled"

# Template used to generate a note's filename, without extension.
filename = "{{id}}-{{slug title}}"

# The file extension used for the notes.
extension = "md"

# Template used to generate a note's content.
# If not an absolute path or "~/unix/path", it's relative to .zk/templates/
template = "default.md"

# Path globs ignored while indexing existing notes.
#exclude = [
#    "drafts/*",
#    "log.md"
#]

# Configure random ID generation.

# The charset used for random IDs. You can use:
#   * letters: only letters from a to z.
#   * numbers: 0 to 9
#   * alphanum: letters + numbers
#   * hex: hexadecimal, from a to f and 0 to 9
#   * custom string: will use any character from the provided value
id-charset = "alphanum"

# Length of the generated IDs.
id-length = 4

# Letter case for the random IDs, among lower, upper or mixed.
id-case = "lower"


# EXTRA VARIABLES
#
# A dictionary of variables you can use for any custom values when generating
# new notes. They are accessible in templates with {{extra.<key>}}
[extra]

#key = "value"


# GROUP OVERRIDES
#
# You can override global settings from [note] and [extra] for a particular
# group of notes by declaring a [group."<name>"] section.
#
# Specify the list of directories which will automatically belong to the group
# with the optional `paths` property.
#
# Omitting `paths` is equivalent to providing a single path equal to the name of
# the group. This can be useful to quickly declare a group by the name of the
# directory it applies to.

#[group."<NAME>"]
#paths = ["<DIR1>", "<DIR2>"]
#[group."<NAME>".note]
#filename = "{{format-date now}}"
#[group."<NAME>".extra]
#key = "value"

[group.fleeting]
paths = ["FleetingNotes"]

[group.fleeting.note]
filename = "flt-{{id}}-{{format-date now 'timestamp'}}"
extension = "md"

[group.permanent]
paths = ["PermanentNotes"]

[group.permanent.note]
filename = "{{title}}"
extension = "md"

[group.structure]
paths = ["StructureNotes"]

[group.structure.note]
filename = "{{title}}"
extension = "md"

[group.root_literature]
paths = ["StructureNotes/Literature"]

[group.root_literature.note]
filename = "{{title}}"
extension = "md"
template = "root-literature.md"

[group.literature]
paths = ["LiteratureNotes"]

[group.literature.note]
filename = "{{title}}"
extension = "md"


# MARKDOWN SETTINGS
[format.markdown]

# Format used to generate links between notes.
# Either "wiki", "markdown" or a custom template. Default is "markdown".
link-format = "wiki"
# Indicates whether a link's path will be percent-encoded.
# Defaults to true for "markdown" format and false for "wiki" format.
#link-encode-path = true
# Indicates whether a link's path file extension will be removed.
# Defaults to true.
#link-drop-extension = true

# Enable support for #hashtags.
hashtags = false
# Enable support for :colon:separated:tags:.
colon-tags = false
# Enable support for Bear's #multi-word tags#
# Hashtags must be enabled for multi-word tags to work.
multiword-tags = false


# EXTERNAL TOOLS
[tool]

# Default editor used to open notes. When not set, the EDITOR or VISUAL
# environment variables are used.
editor = "nvim"

# Pager used to scroll through long output. If you want to disable paging
# altogether, set it to an empty string "".
pager = "less -FIRX"

# Command used to preview a note during interactive fzf mode.
# Set it to an empty string "" to disable preview.

# bat is a great tool to render Markdown document with syntax highlighting.
#https://github.com/sharkdp/bat
fzf-preview = "bat -p --color always {-1}"


# LSP
#
#   Configure basic editor integration for LSP-compatible editors.
#   See https://github.com/zk-org/zk/blob/main/docs/editors-integration.md
#
[lsp]

[lsp.diagnostics]
# Each diagnostic can have for value: none, hint, info, warning, error

# Report titles of wiki-links as hints.
#wiki-title = "hint"
# Warn for dead links between notes.
dead-link = "error"

[lsp.completion]
# Customize the completion pop-up of your LSP client.

# Show the note title in the completion pop-up, or fallback on its path if empty.
#note-label = "{{title-or-path}}"
# Filter out the completion pop-up using the note title or its path.
#note-filter-text = "{{title}} {{path}}"
# Show the note filename without extension as detail.
#note-detail = "{{filename-stem}}"


# NAMED FILTERS
#
#    A named filter is a set of note filtering options used frequently together.
#
[filter]

# Matches the notes created the last two weeks. For example:
#    $ zk list recents --limit 15
#    $ zk edit recents --interactive
recents = "--sort created- --created-after 'last two weeks'"


# COMMAND ALIASES
#
#   Aliases are user commands called with `zk <alias> [<flags>] [<args>]`.
#
#   The alias will be executed with `$SHELL -c`, please refer to your shell's
#   man page to see the available syntax. In most shells:
#     * $@ can be used to expand all the provided flags and arguments
#     * you can pipe commands together with the usual | character
#
[alias]
# Edit this configuration file.
conf = 'nvim "$ZK_NOTEBOOK_DIR/.zk/config.toml"'

# Make directories
mkdir = """
echo 'Creating drecttories...' \
&& set -eux \
&& mkdir -p $ZK_NOTEBOOK_DIR/FleetingNotes \
&& mkdir -p $ZK_NOTEBOOK_DIR/PermanentNotes \
&& mkdir -p $ZK_NOTEBOOK_DIR/StructureNotes \
&& mkdir -p $ZK_NOTEBOOK_DIR/LiteratureNotes \
&& mkdir -p $ZK_NOTEBOOK_DIR/StructureNotes/Literature \
&& set +eux \
&& echo 'Done.'
"""

# Edit the last modified note.
editlast = "zk edit --limit 1 --sort modified- $@"
# Edit the notes selected interactively among the notes created the last two weeks.
recent = "zk edit --sort created- --created-after 'last two weeks' --interactive"
# Show a random note.
lucky = "zk list --quiet --format full --sort random --limit 1"
# Find and edit notes.
ls = "zk edit --interactive"
# Remove notes interactively.
rm = "zk list --interactive --quiet --format path --delimiter0 --sort word-count $@ | xargs -0 rm -v --"
# Push changes to the git repository.
git-push = "cd $ZK_NOTEBOOK_DIR; git add -A; git commit -am 'updating'; git push; cd -"
# Find and edit tagless notes.
tagless = "zk edit --interactive --tagless"

# Fleeting notes
flt = 'zk new --no-input "$ZK_NOTEBOOK_DIR/FleetingNotes" --title "$*"'
ls-flt = "zk edit $ZK_NOTEBOOK_DIR/FleetingNotes --sort created- --interactive"
# Permanent notes
perm = 'zk new --no-input "$ZK_NOTEBOOK_DIR/PermanentNotes" --title "$*"'
ls-perm = "zk edit $ZK_NOTEBOOK_DIR/PermanentNotes --sort created- --interactive"
# Structure notes
str = 'zk new --no-input "$ZK_NOTEBOOK_DIR/StructureNotes" --title "$*"'
ls-str = "zk edit $ZK_NOTEBOOK_DIR/StructureNotes --sort created- --interactive"
# Literature notes
## Root literature note
rtlit= 'zk new --no-input "$ZK_NOTEBOOK_DIR/StructureNotes/Literature" --title "$*"'
ls-rtlit = "zk edit $ZK_NOTEBOOK_DIR/StructureNotes --sort created- --interactive"
## literature note
lit= 'zk new --no-input "$ZK_NOTEBOOK_DIR/LiteratureNotes" --title "$*"'
ls-lit = "zk edit $ZK_NOTEBOOK_DIR/LiteratureNotes --sort created- --interactive"
## Generate a bibliography from literature notes
cit = 'zk list --interactive --quiet --format path --delimiter0 "$ZK_NOTEBOOK_DIR/StructureNotes/Literature" | xargs -0 yq --front-matter=extract -r "(.extra.authors | join(\",\")) + \". \" + (.title) + \". \" + (.extra.publication) + \". \" + (.extra.published_at) + \". \" + (.extra.url)"'
